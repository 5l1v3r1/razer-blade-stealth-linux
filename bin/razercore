#!/bin/bash
# Razer Core thunderbolt (de-)connect script
# No warranty, no license, just for fun
#
# Needs Bumblebee, tested with NVIDIA GFX card
# Setup & details:
# https://github.com/rolandguelle/razer-blade-stealth-linux
#
#set -x

typeset -i RETRYDRIVER
RETRYDRIVER=0
GLXTEST=""

function checkRazerCore() {
	if [[ ! -e /sys/bus/thunderbolt/devices/0-0/0-1/vendor_name ]]
	then
		echo "No thunderbold device found. Rescan PCI bus."
		echo "1" | sudo tee /sys/bus/pci/rescan > /dev/null
		sleep 1
	fi

	if [[ -e /sys/bus/thunderbolt/devices/0-0/0-1/vendor_name && "$(cat /sys/bus/thunderbolt/devices/0-0/0-1/vendor_name)" == 'Razer' && "$(cat /sys/bus/thunderbolt/devices/0-0/0-1/device_name)" == 'Core' ]]
	then
		return
	else
		echo "Razer Core not found"
		exit 1
	fi	
}

function usageText() {
	echo "Usage: razercore start|stop|restart|status|exec <prog>|exec-ext <prog>"
}

function restartBumblebeed() {
	echo "Restart bumblebeed"
	sudo service bumblebeed restart
	sleep 1
}

function coreAuthorize() {
	if [[ $RETRYDRIVER > 3 ]]
	then
		echo "Too many retries, giving up!"
		echo "OpenGL driver not correct loaded!"
		echo "Check thunderbolt cable or installaton."
		exit 1
	fi

	checkRazerCore

	if [[ "$(cat /sys/bus/thunderbolt/devices/0-0/0-1/authorized)" == '0' ]]
	then
		echo "Authorize Razer Core..."
		echo "1" | sudo tee /sys/bus/thunderbolt/devices/0-0/0-1/authorized > /dev/null
		restartBumblebeed
	else
		echo "Razer Core already authorized."
	fi

	restartBumblebeed
	coreStatus

	if [[ $GLXTEST == '' ]]
	then
		RETRYDRIVER+=1
		echo "Retry $RETRYDRIVER loading driver..."
		restartBumblebeed
		coreAuthorize
	fi
}

function coreStatus() {
	if [[ -e /sys/bus/thunderbolt/devices/0-0/0-1/vendor_name ]]
	then
		if [[ "$(cat /sys/bus/thunderbolt/devices/0-0/0-1/vendor_name)" == 'Razer' && "$(cat /sys/bus/thunderbolt/devices/0-0/0-1/device_name)" == 'Core' ]]
		then
			echo "Razer Core connected: id=$(cat /sys/bus/thunderbolt/devices/0-0/0-1/unique_id)"
			echo "Authorized: $(cat /sys/bus/thunderbolt/devices/0-0/0-1/authorized)"
			if [[ "$(cat /sys/bus/thunderbolt/devices/0-0/0-1/authorized)" == '1' ]]
			then
				GLXTEST=$(optirun glxinfo 2> /dev/null | grep OpenGL | grep string)
				if [[ $GLXTEST == '' ]]
				then
					echo "OpenGL driver not correct loaded!"
				else
					echo "OpenGL Driver loaded!"
					echo "${GLXTEST}"
				fi
			fi
		else
			echo "Razer Core not found, but other thunderbolt device:"
			echo "Vendor: $(cat /sys/bus/thunderbolt/devices/0-0/0-1/vendor_name)"
			echo "Device: $(cat /sys/bus/thunderbolt/devices/0-0/0-1/device_name)"
		fi
	else
		echo "Razer Core not connected or stopped."	
	fi
}

function removeRazerCore {
	if [[ -e /sys/bus/pci/devices/0000\:04\:00.0/remove ]]
	then
		echo "Remove Racer Core PCI Devices..."
		echo "1" | sudo tee /sys/bus/pci/devices/0000\:04\:00.0/remove > /dev/null
	else
		echo "Racer Core PCI Devices seems to be gone..."
	fi
}

# exec program and display screen screen
function execInternal {
	coreAuthorize
	shift
	PRIMUS_SYNC=1 vblank_mode=0 primusrun "$@"
}

# exec program and display external screen connected on GPU / Razer Core
function execExternal {
    coreAuthorize
	echo "Backup existing configuration"
    sudo mv /etc/bumblebee/bumblebee.conf /etc/bumblebee/bumblebee.conf.bak
	echo "Use bumblebee-external.conf"
    sudo cp /etc/bumblebee/bumblebee-external.conf /etc/bumblebee/bumblebee.conf
	echo "Restart modified bumblebeed"
	sudo service bumblebeed restart
	sleep 1
	# needed for steam
	sudo prime-select nvidia
	# set configuration back, for later bumblebee restarts
    sudo mv /etc/bumblebee/bumblebee.conf.bak /etc/bumblebee/bumblebee.conf
	# start external X server
	optirun true
	# set x env to external display
	export DISPLAY=:8 LD_LIBRARY_PATH=/usr/lib/nvidia-387:$LD_LIBRARY_PATH
	shift
	exec "$@"
}

command="$1"

if [[ $command == "exec-ext" ]]
then
	execExternal
elif [[ $command == "exec" ]]
then
	execInternal
elif [[ $command == "start" ]]
then
	coreAuthorize
elif [[ $command == "stop" ]]
then
	checkRazerCore
	# undo potential exec-ext settings
	sudo prime-select intel
	restartBumblebeed
	removeRazerCore
elif [[ $command == "restart" ]]
then
	removeRazerCore
	coreAuthorize
elif [[ $command == "status" ]]
then
	coreStatus
else
	usageText
fi